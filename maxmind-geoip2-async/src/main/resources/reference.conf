
akka {
  persistence {
    journal.plugin = "akka.persistence.journal.inmem"
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "logs"
    }
  }
  actor.deployment {
    /geolocation-supervisor/geolocation {
      router = round-robin-pool
      nr-of-instances = 4
    }
  }
}

geolocation {
  geoip2db {
    instances = ${akka.actor.deployment."/geolocation-supervisor/geolocation".nr-of-instances} // How much IPs do you want to locate at a time
    dbUrl = "http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz" // URL where to go for new DB file.
    dbFile = ${java.io.tmpdir}"/GeoLite2-City.mmdb" // Place where to store DB Files. Directory must be writeable.
    download {
      dispatcherName = akka.actor.default-dispatcher // Dispatcher which will execute all actions related to file download.
      headers {
        validFor: Inf // Plugin also stores ETag and Last-Modified headers at cache. This setting is FiniteDuration of that validity
      }
    }
    compression {
      type = GZIP // Accepted options: GZIP, DEFLATE, NONE; Usually GeoLite DB files are GZip-compressed. This setting'll decompress a file downstream.
      chunkSize = 64kB //${akka.stream.scaladsl.Compression.MaxBytesPerChunkDefault} - size of chunk to decompress. Set to AkkaStreams default.
    }
    databaseFileProviderPersistenceId = "maxmind.geoip2db.database" // PersistenceId for DatabaseFileProvider actor.
  }
}
